ABOUT THE CODE
This code is for a 3D Navier-Stokes computational fluid dynamics solver. It is a cell centered, structured solver, using block structured grids in Plot3D format. It uses explicit and implicit time integration methods. It uses MUSCL extrapolation to reconstruct the conserved variables from the cell centers to the cell faces. The code uses the Roe flux difference splitting scheme for the inviscid fluxes, and a central scheme for the viscous fluxes. It is second order accurate in both space and time.

CURRENT STATUS
The code is 2nd order accurate in space and time using the explicit solver. Available explicit time integration methods are forward euler (1st order) and a minimum storage four stage Runge-Kutta method (2nd order). The implicit solver (LU-SGS) is implemented for implicit time integration. Dual time stepping is implemented for time accuracy in the implicit solver. Available implicit time integrations methods come from the Beam and Warming family of methods and are the implicit euler (1st order), Crank-Nicholson (2nd order), and BDF2 (2nd order) methods.

TO DO LIST
- Add interblock boundary condition so that multiple blocks can be used in the simulation.
- Add RANS terms with turbulence model.
- Parallelize.

FILES AND CLASSES
blockVars - A class to store the state vector (primatives), inviscid fluxes, cell volume, face areas, time step, and residual for a plot3D block of cells.
boundaryConditions - A class to store the data for the boundary conditions on each block.
eos - A class to impliment the perfect gas equation of state and sutherland's law for viscosity.
input - A class to read in the input file and store the necessary data.
inviscidFlux - A class to store the inviscid flux vector for a cell. Contains functions to calculate the flux.
main - The driver of the code.
MAKEFILE - The makefile to compile the code
matrix - A class to store the matrix elements of the Jacobian matrix for the implicit solver.
output - Functions to write out the solution in plot3D function file format.
primVars - A class to store the primative variables at a cell center.
vector3d - A templated class to store vectors in 3D space.
viscBlockVars - A class to store the viscous fluxes for a plot3D block of cells.
viscFlux - A class to store the viscous flux vector for a cell. Contains functions to calculate the flux.

HOW TO COMPILE
Assuming you have g++, just type 'make'.

HOW TO RUN
main inputFile.inp >outputFile.out 2>errorFile.err